<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Search Results - Careers Designer</title>
    <style>
        /* Previous CSS remains the same */
        body {
            margin: 0;
            font-family: Arial, sans-serif;
        }

        .search-results-container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            background-color: white;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .job-card {
            border: 1px solid #ddd;
            margin-bottom: 15px;
            padding: 15px;
            border-radius: 5px;
        }

        .job-title {
            color: #333;
            margin-bottom: 10px;
        }

        .job-details {
            color: #666;
        }

        .job-apply {
            display: inline-block;
            background-color: #e313af;
            color: white;
            padding: 8px 15px;
            text-decoration: none;
            border-radius: 4px;
            margin-top: 10px;
        }

        .missing-skills {
            display: inline-block;
            background-color: #e68714;
            color: white;
            padding: 8px 15px;
            text-decoration: none;
            border-radius: 4px;
            margin-top: 10px;
        }

        .upskill {
            display: inline-block;
            background-color: #4CAF50;
            color: white;
            padding: 8px 15px;
            text-decoration: none;
            border-radius: 4px;
            margin-top: 10px;
        }

        .company-reviews {
            display: inline-block;
            background-color: #161deb;
            color: white;
            padding: 8px 15px;
            text-decoration: none;
            border-radius: 4px;
            margin-top: 10px;
        }

        .search-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .back-button {
            background-color: #007bff;
            color: white;
            text-decoration: none;
            padding: 8px 15px;
            border-radius: 4px;
        }

        /* Navigation Bar */
        .navbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background-color: #004080;
            padding: 0.5rem 1rem;
            color: white;
        }

        .navbar .logo {
            font-size: 1.5rem;
            font-weight: bold;
        }

        .navbar ul {
            display: flex;
            list-style: none;
            margin: 0;
            padding: 0;
        }

        .navbar ul li {
            margin: 0 0.5rem;
        }

        .navbar ul li a {
            text-decoration: none;
            color: white;
            font-size: 1rem;
            padding: 0.5rem 0.8rem;
        }

        .navbar ul li a:hover {
            background-color: #0066cc;
            border-radius: 5px;
        }

        .navbar .auth-buttons {
            display: flex;
            gap: 0.5rem;
        }

        .navbar .auth-buttons a {
            text-decoration: none;
            color: #004080;
            background-color: white;
            padding: 0.5rem 1rem;
            border-radius: 5px;
            font-size: 1rem;
        }

        .navbar .auth-buttons a:hover {
            background-color: #e6e6e6;
        }

        @media (max-width: 768px) {
            .navbar ul {
                display: none;
            }
        }
    </style>
</head>

<body>
    <!-- Navigation Bar -->
    <nav class="navbar">
        <div class="logo">Careers Designer</div>
        <ul>
            <li><a href="index.htm">Search Jobs</a></li>
            <li><a href="latestJobs.htm">Latest Jobs</a></li>
            <li><a href="aboutUs.htm">About Us</a></li>
        </ul>
        <div class="auth-buttons">
            <a href="#login">Login</a>
            <a href="#signup">Sign Up</a>
        </div>
    </nav>

    <div class="search-results-container">
        <div class="search-header">
            <h1>Search Results</h1>
            <a href="index.htm" class="back-button">Back to Search</a>
        </div>

        <div id="job-results">
            <!-- Job results will be dynamically populated here -->
        </div>
    </div>

    <script>
        // API key (Note: It's not recommended to expose API keys in client-side code)
        const GEMINI_API_KEY = 'AIzaSyDFe-vQXZpD7PlfDUuGiZb3qSruwsbFN1g';

        // Utility function to get query parameters
        function getQueryParam(name) {
            const urlParams = new URLSearchParams(window.location.search);
            const value = urlParams.get(name);
            return value ? value.trim() : '';
        }

        // Calculate skill match percentage
        function calculateMatchPercentage(inputSkills, jobSkills) {
            const inputSkillsArray = inputSkills.toLowerCase().split(',').map(skill => skill.trim());
            const jobSkillsArray = jobSkills ?
                jobSkills.toLowerCase().split('|').map(skill => skill.trim()) :
                [];

            const matchingSkills = inputSkillsArray.filter(inputSkill =>
                jobSkillsArray.some(jobSkill => inputSkill === jobSkill)
            );

            return jobSkillsArray.length > 0
                ? (matchingSkills.length / jobSkillsArray.length) * 100
                : 0;
        }

        // Fetch company reviews from Gemini API
        async function fetchCompanyReviews(companyName) {
            const prompt = `Provide a comprehensive overview of ${companyName}'s company culture, employee satisfaction, and workplace environment. Include pros and cons, typical employee experiences, and general reputation in the industry.`;

            try {
                const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${GEMINI_API_KEY}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        contents: [{
                            parts: [{
                                text: prompt
                            }]
                        }],
                        generationConfig: {
                            maxOutputTokens: 1024,
                            temperature: 0.7,
                            topP: 1
                        }
                    })
                });

                const data = await response.json();
                return data.candidates[0].content.parts[0].text;
            } catch (error) {
                console.error('Error fetching company reviews:', error);
                return 'Unable to fetch company reviews at this time.';
            }
        }

        // Format company reviews with enhanced styling
        function formatCompanyReviews(reviewText) {
            // Create a container for formatted reviews
            const formattedReviews = document.createElement('div');
            formattedReviews.className = 'company-reviews-content';

            // Custom styling for the reviews
            const style = document.createElement('style');
            style.textContent = `
        .company-reviews-content {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            color: #333;
            max-width: 800px;
            margin: 0 auto;
        }
        .review-section {
            margin-bottom: 20px;
            background-color: #f9f9f9;
            padding: 15px;
            border-radius: 8px;
        }
        .review-section h3 {
            color: #2c3e50;
            border-bottom: 2px solid #3498db;
            padding-bottom: 10px;
            margin-bottom: 15px;
        }
        .review-content {
            text-align: left;
        }
        .review-list {
            list-style-type: disc;
            padding-left: 20px;
        }
    `;
            formattedReviews.appendChild(style);

            // Sections to parse
            const sections = [
                'Company Culture',
                'Employee Satisfaction',
                'Workplace Environment',
                'Typical Employee Experiences',
                'General Reputation in the Industry'
            ];

            // Create sections dynamically
            sections.forEach(sectionTitle => {
                // Create section div
                const sectionDiv = document.createElement('div');
                sectionDiv.className = 'review-section';

                // Add section title
                const titleElement = document.createElement('h3');
                titleElement.textContent = sectionTitle;
                sectionDiv.appendChild(titleElement);

                // Create content div
                const contentDiv = document.createElement('div');
                contentDiv.className = 'review-content';

                // Try to extract content for this section
                const sectionRegex = new RegExp(`\\*\\*${sectionTitle}\\*\\*([\\s\\S]*?)(?=\\*\\*[A-Za-z]|$)`, 'i');
                const sectionMatch = reviewText.match(sectionRegex);

                if (sectionMatch) {
                    let sectionContent = sectionMatch[1].trim();

                    // Convert to list if multiple points
                    if (sectionContent.includes('***')) {
                        const ul = document.createElement('ul');
                        ul.className = 'review-list';

                        // Split by *** and create list items
                        const points = sectionContent.split('***')
                            .filter(point => point.trim())
                            .map(point => point.trim());

                        points.forEach(point => {
                            const li = document.createElement('li');
                            li.textContent = point;
                            ul.appendChild(li);
                        });

                        contentDiv.appendChild(ul);
                    } else {
                        // If no list, just add as paragraph
                        const p = document.createElement('p');
                        p.textContent = sectionContent;
                        contentDiv.appendChild(p);
                    }
                } else {
                    // If no content found, add a default message
                    const p = document.createElement('p');
                    p.textContent = 'No specific information available for this section.';
                    contentDiv.appendChild(p);
                }

                // Add content to section
                sectionDiv.appendChild(contentDiv);

                // Add section to main container
                formattedReviews.appendChild(sectionDiv);
            });

            // Pros and Cons section
            const prosConsMatch = reviewText.match(/\*\*Pros and Cons\*\*\s*\*\*Pros:\*\*\s*([\s\S]*?)\s*\*\*Cons:\*\*\s*([\s\S]*)/);

            if (prosConsMatch) {
                const prosConsDiv = document.createElement('div');
                prosConsDiv.className = 'review-section';
                prosConsDiv.innerHTML = `
            <h3>Pros and Cons</h3>
            <div class="review-content">
                <h4>Pros:</h4>
                <ul class="review-list">
                    ${prosConsMatch[1].split('*')
                        .filter(pro => pro.trim())
                        .map(pro => `<li>${pro.trim()}</li>`)
                        .join('')}
                </ul>
                <h4>Cons:</h4>
                <ul class="review-list">
                    ${prosConsMatch[2].split('*')
                        .filter(con => con.trim())
                        .map(con => `<li>${con.trim()}</li>`)
                        .join('')}
                </ul>
            </div>
        `;
                formattedReviews.appendChild(prosConsDiv);
            }

            return formattedReviews;
        }

        // Open company reviews modal
        function openCompanyReviewsModal(companyName) {
            // Create modal container
            const modal = document.createElement('div');
            modal.className = 'company-reviews-modal';
            modal.innerHTML = `
        <div class="modal-content">
            <span class="close-modal">&times;</span>
            <h2>Company Reviews for ${companyName}</h2>
            <div class="reviews-loading">
                <p>Fetching company reviews...</p>
                <div class="loading-spinner"></div>
            </div>
        </div>
    `;
            document.body.appendChild(modal);

            // Add styling
            const style = document.createElement('style');
            style.textContent = `
        .company-reviews-modal {
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
            display: flex;
            justify-content: center;
            align-items: center;
        }
        .modal-content {
            background-color: #fefefe;
            padding: 20px;
            border-radius: 10px;
            width: 80%;
            max-width: 600px;
            max-height: 70%;
            overflow-y: auto;
            position: relative;
        }
        .close-modal {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }
        .reviews-loading {
            text-align: center;
            padding: 20px;
        }
        .loading-spinner {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #3498db;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 20px auto;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
    `;
            document.head.appendChild(style);

            // Close modal functionality
            const closeModal = modal.querySelector('.close-modal');
            closeModal.onclick = () => document.body.removeChild(modal);
            modal.onclick = (e) => {
                if (e.target === modal) {
                    document.body.removeChild(modal);
                }
            };

            // Fetch and display reviews
            fetchCompanyReviews(companyName)
                .then(reviews => {
                    const reviewsContainer = modal.querySelector('.reviews-loading');
                    reviewsContainer.innerHTML = '';
                    reviewsContainer.appendChild(formatCompanyReviews(reviews));
                })
                .catch(error => {
                    const reviewsContainer = modal.querySelector('.reviews-loading');
                    reviewsContainer.innerHTML = `
                <p>Error fetching company reviews: ${error.message}</p>
            `;
                });
        }

        // Display job results
        async function displayJobResults() {
            try {
                const response = await fetch('jobs.json');
                const jobData = await response.json();

                const query = getQueryParam('query');
                const location = getQueryParam('location');

                const matchedJobs = jobData
                    .map(job => ({
                        ...job,
                        match_percentage: calculateMatchPercentage(query, job.key_skills).toFixed(2)
                    }))
                    .filter(job =>
                        (query === '' || job.match_percentage > 0) &&
                        (location === '' || job.location.toLowerCase().includes(location.toLowerCase()))
                    )
                    .sort((a, b) => b.match_percentage - a.match_percentage);

                const resultsContainer = document.getElementById('job-results');

                if (matchedJobs.length === 0) {
                    document.querySelector('.search-header h1').textContent = 'No Job Results';
                    return;
                }

                resultsContainer.innerHTML = matchedJobs.map(job => `
            <div class="job-card">
                <h2 class="job-title">${job.job_title.trim()}</h2>
                <div class="job-details">
                    <p><strong>Company:</strong> ${job.company_name}</p>
                    <p><strong>Location:</strong> ${job.location}</p>
                    <p><strong>Salary:</strong> ${job.job_salary}</p>
                    <p><strong>Experience:</strong> ${job.job_experience_required}</p>
                    <p><strong>Key Skills:</strong> ${job.key_skills}</p>
                    <p><strong>Match Percentage:</strong> ${job.match_percentage}%</p>
                </div>
                <div class="job-actions">
                    <a href="#" class="missing-skills">Missing Skills</a>
                    <a href="#" class="upskill">Upskill</a>
                    <a href="#" class="company-reviews" data-company="${job.company_name}">Company Reviews</a>
                    <a href="#" class="job-apply">Apply Now</a>
                </div>
            </div>
        `).join('');

                // Add event listeners for company reviews
                document.querySelectorAll('.company-reviews').forEach(button => {
                    button.addEventListener('click', (e) => {
                        e.preventDefault();
                        const companyName = e.target.getAttribute('data-company');
                        openCompanyReviewsModal(companyName);
                    });
                });

                document.querySelector('.search-header h1').textContent =
                    `${matchedJobs.length} Job Results for "${query}" in ${location}`;

            } catch (error) {
                console.error('Error loading job data:', error);
                document.getElementById('job-results').innerHTML =
                    '<p>Error loading job listings. Please try again later.</p>';
            }
        }

        // Event listener for page load
        document.addEventListener('DOMContentLoaded', displayJobResults);
    </script>
</body>

</html>