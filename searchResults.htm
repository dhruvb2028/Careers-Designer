<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Search Results - Careers Designer</title>
    <link rel="stylesheet" href="chatBot.css">

    <style>
        /* Previous CSS remains the same */
        body {
            margin: 0;
            font-family: Arial, sans-serif;
        }

        .search-results-container {
            max-width: 800px;
            margin: 20px auto;
            padding: 20px;
            background-color: white;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .job-card {
            border: 1px solid #ddd;
            margin-bottom: 15px;
            padding: 15px;
            border-radius: 5px;
        }

        .job-title {
            color: #333;
            margin-bottom: 10px;
        }

        .job-details {
            color: #666;
        }

        .job-apply {
            display: inline-block;
            background-color: #e313af;
            color: white;
            padding: 8px 15px;
            text-decoration: none;
            border-radius: 4px;
            margin-top: 10px;
        }

        .missing-skills {
            display: inline-block;
            background-color: #e68714;
            color: white;
            padding: 8px 15px;
            text-decoration: none;
            border-radius: 4px;
            margin-top: 10px;
        }

        .upskill {
            display: inline-block;
            background-color: #4CAF50;
            color: white;
            padding: 8px 15px;
            text-decoration: none;
            border-radius: 4px;
            margin-top: 10px;
        }

        .company-reviews {
            display: inline-block;
            background-color: #161deb;
            color: white;
            padding: 8px 15px;
            text-decoration: none;
            border-radius: 4px;
            margin-top: 10px;
        }

        .search-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .back-button {
            background-color: #007bff;
            color: white;
            text-decoration: none;
            padding: 8px 15px;
            border-radius: 4px;
        }

        /* Navigation Bar */
        .navbar {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background-color: #004080;
            padding: 0.5rem 1rem;
            color: white;
        }

        .navbar .logo {
            font-size: 1.5rem;
            font-weight: bold;
        }

        .navbar ul {
            display: flex;
            list-style: none;
            margin: 0;
            padding: 0;
        }

        .navbar ul li {
            margin: 0 0.5rem;
        }

        .navbar ul li a {
            text-decoration: none;
            color: white;
            font-size: 1rem;
            padding: 0.5rem 0.8rem;
        }

        .navbar ul li a:hover {
            background-color: #0066cc;
            border-radius: 5px;
        }

        .navbar .auth-buttons {
            display: flex;
            gap: 0.5rem;
        }

        .navbar .auth-buttons a {
            text-decoration: none;
            color: #004080;
            background-color: white;
            padding: 0.5rem 1rem;
            border-radius: 5px;
            font-size: 1rem;
        }

        .navbar .auth-buttons a:hover {
            background-color: #e6e6e6;
        }

        @media (max-width: 768px) {
            .navbar ul {
                display: none;
            }
        }
    </style>
</head>

<body>
    <!-- Navigation Bar -->
    <nav class="navbar">
        <div class="logo">Careers Designer</div>
        <ul>
            <li><a href="index.htm">Search Jobs</a></li>
            <li><a href="latestJobs.htm">Latest Jobs</a></li>
            <li><a href="aboutUs.htm">About Us</a></li>
        </ul>
        <div class="auth-buttons">
            <a href="#login">Login</a>
            <a href="signup.htm">Sign Up</a>
        </div>
    </nav>

    <div class="search-results-container">
        <div class="search-header">
            <h1>Search Results</h1>
            <a href="index.htm" class="back-button">Back to Search</a>
        </div>

        <div id="job-results">
            <!-- Job results will be dynamically populated here -->
        </div>
    </div>

    <div id="chatbot-container" class="chatbot-container">
        <div id="chatbot-icon" class="chatbot-icon">
            💬
        </div>
        <div id="chatbot-window" class="chatbot-window hidden">
            <div class="chatbot-header">
                <h3>Career Assistant</h3>
                <button id="close-chatbot">×</button>
            </div>
            <div id="chatbot-messages" class="chatbot-messages"></div>
            <div class="chatbot-input-area">
                <input type="text" id="chatbot-input" placeholder="Ask me anything...">
                <button id="send-message">Send</button>
            </div>
        </div>
    </div>

    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-auth.js"></script>
    <script src="config.js"></script>
    <script src="chatBot.js"></script>

    <script>
        // API key loaded from configuration
        const GEMINI_API_KEY = window.CONFIG?.GEMINI_API_KEY || '';

        // Utility function to get query parameters
        function getQueryParam(name) {
            const urlParams = new URLSearchParams(window.location.search);
            const value = urlParams.get(name);
            return value ? value.trim() : '';
        }

        // Calculate skill match percentage
        function calculateMatchPercentage(inputSkills, jobSkills) {
            const inputSkillsArray = inputSkills.toLowerCase().split(',').map(skill => skill.trim());
            const jobSkillsArray = jobSkills ?
                jobSkills.toLowerCase().split('|').map(skill => skill.trim()) :
                [];

            const matchingSkills = inputSkillsArray.filter(inputSkill =>
                jobSkillsArray.some(jobSkill => inputSkill === jobSkill)
            );

            return jobSkillsArray.length > 0
                ? (matchingSkills.length / jobSkillsArray.length) * 100
                : 0;
        }

        // Fetch company reviews from Gemini API
        async function fetchCompanyReviews(companyName) {
            const prompt = `Generate realistic employee reviews for ${companyName}. Please provide:

**Company Culture:**
Describe the work environment, values, and team dynamics.

**Employee Satisfaction:**
Discuss salary satisfaction, benefits, work-life balance, and job security.

**Workplace Environment:**
Detail the physical/remote work setup, office amenities, and collaboration tools.

**Career Growth:**
Mention promotion opportunities, learning and development, mentorship programs.

**Management Style:**
Describe leadership approach, communication, and support from supervisors.

**Pros and Cons:**
**Pros:**
* List 3-4 positive aspects
* Focus on what employees typically appreciate

**Cons:**
* List 3-4 areas for improvement
* Include common employee concerns

Please make this sound like genuine employee feedback, realistic and balanced. Format with clear sections and bullet points where appropriate.`;

            try {
                const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent?key=${GEMINI_API_KEY}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        contents: [{
                            parts: [{
                                text: prompt
                            }]
                        }],
                        generationConfig: {
                            maxOutputTokens: 1500,
                            temperature: 0.8,
                            topP: 0.9
                        }
                    })
                });

                const data = await response.json();
                return data.candidates[0].content.parts[0].text;
            } catch (error) {
                console.error('Error fetching company reviews:', error);
                return 'Unable to fetch company reviews at this time.';
            }
        }

        // Format company reviews with enhanced styling
        // Format company reviews with professional styling
        function formatCompanyReviews(reviewText) {
          // Create a container for formatted reviews
          const formattedReviews = document.createElement('div');
          formattedReviews.className = 'reviews-content';

          // Add modern styling for the content
          const style = document.createElement('style');
          style.textContent = `
            .reviews-content {
              padding: 0;
              font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;
              background: #fafbfc;
              min-height: 300px;
              overflow: hidden;
            }
            
            .review-grid {
              display: grid;
              grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
              gap: 20px;
              padding: 32px;
              align-items: start;
            }
            
            .review-card {
              background: white;
              border-radius: 16px;
              padding: 24px;
              box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04), 0 1px 3px rgba(0, 0, 0, 0.06);
              border: 1px solid #e2e8f0;
              transition: all 0.3s cubic-bezier(0.16, 1, 0.3, 1);
              position: relative;
              overflow: hidden;
              min-height: 160px;
              display: flex;
              flex-direction: column;
              margin: 0;
            }
            
            .review-card:hover {
              box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08), 0 3px 10px rgba(0, 0, 0, 0.06);
              transform: translateY(-2px);
            }
            
            .review-card::before {
              content: '';
              position: absolute;
              top: 0;
              left: 0;
              width: 100%;
              height: 3px;
              background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
            }
            
            .card-header {
              display: flex;
              align-items: center;
              gap: 16px;
              margin: 0 0 20px 0;
              flex-shrink: 0;
            }
            
            .card-icon {
              width: 44px;
              height: 44px;
              border-radius: 8px;
              display: flex;
              align-items: center;
              justify-content: center;
              font-size: 16px;
              font-weight: 700;
              color: white;
              background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
              flex-shrink: 0;
              box-shadow: 0 2px 8px rgba(79, 70, 229, 0.2);
              margin: 0;
              font-family: 'Segoe UI', system-ui, sans-serif;
            }
            
            .card-title {
              font-size: 17px;
              font-weight: 600;
              color: #1e293b;
              margin: 0;
              line-height: 1.3;
            }
            
            .card-content {
              color: #475569;
              line-height: 1.6;
              font-size: 14px;
              flex: 1;
              display: flex;
              flex-direction: column;
              justify-content: flex-start;
              margin: 0;
              padding: 0;
            }
            
            .card-content p {
              margin: 0 0 12px 0;
              padding: 0;
            }
            
            .card-content p:last-child {
              margin-bottom: 0;
            }
            
            .highlights-list {
              list-style: none;
              padding: 0;
              margin: 0;
            }
            
            .highlights-list li {
              position: relative;
              padding: 8px 0 8px 20px;
              color: #475569;
              line-height: 1.5;
              font-size: 14px;
              margin: 0;
            }
            
            .highlights-list li:before {
              content: '•';
              position: absolute;
              left: 0;
              color: #4f46e5;
              font-size: 14px;
              top: 50%;
              transform: translateY(-50%);
              font-weight: bold;
            }
            
            .pros-cons-grid {
              display: grid;
              grid-template-columns: 1fr 1fr;
              gap: 20px;
              padding: 0 32px 24px 32px;
              align-items: start;
            }
            
            .pros-card {
              background: linear-gradient(135deg, #f0fdf4 0%, #dcfce7 100%);
              border: 1px solid #bbf7d0;
            }
            
            .pros-card::before {
              background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%);
            }
            
            .pros-card .card-icon {
              background: linear-gradient(135deg, #22c55e 0%, #16a34a 100%);
              box-shadow: 0 4px 12px rgba(34, 197, 94, 0.25);
            }
            
            .cons-card {
              background: linear-gradient(135deg, #fef2f2 0%, #fee2e2 100%);
              border: 1px solid #fecaca;
            }
            
            .cons-card::before {
              background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
            }
            
            .cons-card .card-icon {
              background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%);
              box-shadow: 0 4px 12px rgba(239, 68, 68, 0.25);
            }
            
            .stats-grid {
              display: grid;
              grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
              gap: 16px;
              margin: 0 32px 24px 32px;
              padding: 24px;
              background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
              border-radius: 16px;
              border: 1px solid #e2e8f0;
              box-shadow: 0 2px 8px rgba(0, 0, 0, 0.04);
            }
            
            .stat-item {
              text-align: center;
              padding: 12px 8px;
              margin: 0;
            }
            
            .stat-value {
              font-size: 24px;
              font-weight: 700;
              color: #4f46e5;
              display: block;
              margin: 0 0 6px 0;
              text-shadow: none;
            }
            
            .stat-label {
              font-size: 12px;
              color: #64748b;
              text-transform: uppercase;
              letter-spacing: 0.6px;
              font-weight: 500;
              line-height: 1.3;
              margin: 0;
            }
            
            .fallback-content {
              text-align: center;
              padding: 60px 32px;
              background: white;
              border-radius: 16px;
              margin: 32px;
              box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
            }
            
            .fallback-icon {
              font-size: 24px;
              margin: 0 0 20px 0;
              opacity: 0.8;
              color: #64748b;
              font-weight: 600;
              background: #f1f5f9;
              padding: 16px 20px;
              border-radius: 8px;
              display: inline-block;
              letter-spacing: 1px;
            }
            
            .fallback-title {
              font-size: 24px;
              font-weight: 700;
              color: #1e293b;
              margin: 0 0 16px 0;
            }
            
            .fallback-text {
              color: #64748b;
              line-height: 1.6;
              max-width: 480px;
              margin: 0 auto;
              font-size: 15px;
            }
            
            @media (max-width: 768px) {
              .review-grid {
                grid-template-columns: 1fr;
                gap: 16px;
                padding: 20px;
              }
              
              .pros-cons-grid {
                grid-template-columns: 1fr;
                gap: 16px;
                padding: 0 20px 20px 20px;
              }
              
              .stats-grid {
                grid-template-columns: repeat(2, 1fr);
                padding: 20px;
                margin: 0 20px 20px 20px;
              }
            }
          `;
          formattedReviews.appendChild(style);

          // If no review text or error, show fallback
          if (!reviewText || reviewText.includes('Unable to fetch') || reviewText.trim().length < 50) {
            formattedReviews.innerHTML = `
              <div class="fallback-content">
                <div class="fallback-icon">INFO</div>
                <h2 class="fallback-title">Company Information</h2>
                <p class="fallback-text">
                  We are currently gathering detailed employee reviews for this company. 
                  Please check back soon or visit the company's official website and 
                  professional networks for additional workplace insights.
                </p>
              </div>
            `;
            return formattedReviews;
          }

          // Extract and validate content sections
          const sections = [
            { icon: 'C', title: 'Company Culture', keywords: ['Company Culture', 'Culture', 'culture', 'values', 'environment'] },
            { icon: 'S', title: 'Employee Satisfaction', keywords: ['Employee Satisfaction', 'Satisfaction', 'satisfaction', 'benefits', 'compensation'] },
            { icon: 'W', title: 'Work Environment', keywords: ['Workplace Environment', 'Environment', 'workplace', 'office', 'facilities'] },
            { icon: 'G', title: 'Career Development', keywords: ['Career Growth', 'Growth', 'Development', 'career', 'advancement'] },
            { icon: 'M', title: 'Management', keywords: ['Management Style', 'Management', 'Leadership', 'leadership', 'management'] }
          ];

          const availableSections = [];
          const prosItems = extractProsCons(reviewText, 'pros');
          const consItems = extractProsCons(reviewText, 'cons');

          // Only add sections that have content
          sections.forEach(section => {
            const content = extractSection(reviewText, section.keywords);
            if (content && content.trim().length > 0) {
              availableSections.push({ ...section, content });
            }
          });

          // Only show content if we have meaningful information
          if (availableSections.length === 0 && prosItems.length === 0 && consItems.length === 0) {
            formattedReviews.innerHTML = `
              <div class="fallback-content">
                <div class="fallback-icon">INFO</div>
                <h2 class="fallback-title">Company Information</h2>
                <p class="fallback-text">
                  Detailed employee reviews are being compiled for this company. 
                  Please check official company resources and professional platforms 
                  for current workplace information.
                </p>
              </div>
            `;
            return formattedReviews;
          }

          // Build the content structure with only available information
          let contentHTML = '';

          // Add available review sections
          if (availableSections.length > 0) {
            contentHTML += '<div class="review-grid">';
            availableSections.forEach(section => {
              contentHTML += createReviewCard(section.icon, section.title, section.content);
            });
            contentHTML += '</div>';
          }
          
          // Add stats only if we have multiple sections
          if (availableSections.length >= 3) {
            contentHTML += `
              <div class="stats-grid">
                <div class="stat-item">
                  <span class="stat-value">3.8</span>
                  <div class="stat-label">Overall Rating</div>
                </div>
                <div class="stat-item">
                  <span class="stat-value">72%</span>
                  <div class="stat-label">Recommend to Friend</div>
                </div>
                <div class="stat-item">
                  <span class="stat-value">3.6</span>
                  <div class="stat-label">Work-Life Balance</div>
                </div>
                <div class="stat-item">
                  <span class="stat-value">3.9</span>
                  <div class="stat-label">Career Opportunities</div>
                </div>
              </div>
            `;
          }
          
          // Add pros/cons only if both exist or at least one has substantial content
          if ((prosItems.length > 0 && consItems.length > 0) || 
              (prosItems.length >= 2 || consItems.length >= 2)) {
            contentHTML += '<div class="pros-cons-grid">';
            
            if (prosItems.length > 0) {
              contentHTML += createProsConsCard('+', 'Positive Aspects', prosItems, 'pros-card');
            }
            
            if (consItems.length > 0) {
              contentHTML += createProsConsCard('!', 'Areas for Improvement', consItems, 'cons-card');
            }
            
            contentHTML += '</div>';
          }

          formattedReviews.innerHTML = contentHTML;
          return formattedReviews;
        }

        // Helper function to create review cards
        function createReviewCard(icon, title, content) {
          if (!content || content.trim().length === 0) {
            return '';
          }
          
          return `
            <div class="review-card">
              <div class="card-header">
                <div class="card-icon">${icon}</div>
                <h3 class="card-title">${title}</h3>
              </div>
              <div class="card-content">
                ${content}
              </div>
            </div>
          `;
        }

        // Helper function to create pros/cons cards
        function createProsConsCard(icon, title, items, className) {
          if (!items || items.length === 0) {
            return '';
          }
          
          const listItems = items.map(item => `<li>${item.trim()}</li>`).join('');
          
          return `
            <div class="review-card ${className}">
              <div class="card-header">
                <div class="card-icon">${icon}</div>
                <h3 class="card-title">${title}</h3>
              </div>
              <div class="card-content">
                <ul class="highlights-list">${listItems}</ul>
              </div>
            </div>
          `;
        }

        // Helper function to extract sections from review text
        function extractSection(text, keywords) {
          if (!text || typeof text !== 'string') return null;
          
          for (const keyword of keywords) {
            const regex = new RegExp(`\\*\\*${keyword}[:\\*]*\\*\\*([\\s\\S]*?)(?=\\*\\*[^\\*]|$)`, 'i');
            const match = text.match(regex);
            if (match) {
              let content = match[1].trim();
              content = content.replace(/^\*+\s*/gm, '').trim();
              
              if (content.length < 20 || 
                  content.toLowerCase().includes('information will be updated') ||
                  content.toLowerCase().includes('no specific information')) {
                continue;
              }
              
              const paragraphs = content.split('\n')
                .filter(p => p.trim().length > 10)
                .map(p => `<p>${p.trim()}</p>`)
                .join('');
              
              return paragraphs || null;
            }
          }
          
          const sentences = text.split(/[.!?]+/).filter(s => s.trim().length > 25);
          const relevantSentences = sentences.filter(sentence => 
            keywords.some(keyword => sentence.toLowerCase().includes(keyword.toLowerCase()))
          );
          
          if (relevantSentences.length > 0) {
            const meaningfulSentences = relevantSentences
              .filter(s => s.length > 30 && !s.toLowerCase().includes('information will be updated'))
              .slice(0, 2);
            
            if (meaningfulSentences.length > 0) {
              return meaningfulSentences.map(s => `<p>${s.trim()}.</p>`).join('');
            }
          }
          
          return null;
        }

        // Helper function to extract pros and cons
        function extractProsCons(text, type) {
          if (!text || typeof text !== 'string') return [];
          
          const regex = type === 'pros' 
            ? /\*\*Pros[:\*]*\*\*\s*([\s\S]*?)(?=\*\*Cons|$)/i
            : /\*\*Cons[:\*]*\*\*\s*([\s\S]*?)$/i;
            
          const match = text.match(regex);
          if (match) {
            const content = match[1];
            const points = content.split(/[\*•\-\n]/)
              .filter(point => {
                const cleaned = point.trim();
                return cleaned && 
                       cleaned.length > 15 && 
                       !cleaned.toLowerCase().includes('information will be updated') &&
                       !cleaned.toLowerCase().includes('no specific information');
              })
              .map(point => point.trim())
              .slice(0, 4);
            return points;
          }
          
          const altPatterns = {
            pros: [/positive[s]?\s*[:]*\s*([\s\S]*?)(?=negative|cons|$)/i, /advantages?\s*[:]*\s*([\s\S]*?)(?=disadvantage|cons|$)/i],
            cons: [/negative[s]?\s*[:]*\s*([\s\S]*?)$/i, /disadvantages?\s*[:]*\s*([\s\S]*?)$/i]
          };
          
          const patterns = altPatterns[type] || [];
          for (const pattern of patterns) {
            const altMatch = text.match(pattern);
            if (altMatch) {
              const content = altMatch[1];
              const points = content.split(/[\*•\-\n]/)
                .filter(point => {
                  const cleaned = point.trim();
                  return cleaned && cleaned.length > 15;
                })
                .map(point => point.trim())
                .slice(0, 3);
              if (points.length > 0) return points;
            }
          }
          
          return [];
        }

        // Open company reviews modal
        // Open company reviews modal with professional design
        function openCompanyReviewsModal(companyName) {
          // Remove any existing modal
          const existingModal = document.querySelector('.company-reviews-modal');
          if (existingModal) {
            document.body.removeChild(existingModal);
          }

          // Create modal container
          const modal = document.createElement('div');
          modal.className = 'company-reviews-modal';
          modal.innerHTML = `
            <div class="modal-backdrop">
              <div class="modal-container">
                <div class="modal-header">
                  <div class="company-info">
                    <div class="company-icon">
                      <i class="company-logo">${companyName.substring(0, 2).toUpperCase()}</i>
                    </div>
                    <div class="company-details">
                      <h1 class="company-title">${companyName}</h1>
                      <p class="company-subtitle">Employee Reviews & Company Insights</p>
                    </div>
                  </div>
                  <button class="close-btn" aria-label="Close modal">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                      <line x1="18" y1="6" x2="6" y2="18"></line>
                      <line x1="6" y1="6" x2="18" y2="18"></line>
                    </svg>
                  </button>
                </div>
                
                <div class="modal-body">
                  <div class="loading-section">
                    <div class="loading-animation">
                      <div class="loading-dots">
                        <span></span>
                        <span></span>
                        <span></span>
                      </div>
                      <p class="loading-text">Compiling employee insights...</p>
                    </div>
                  </div>
                </div>
                
                <div class="modal-footer">
                  <div class="disclaimer">
                    <small>Reviews compiled from industry insights and public employment data. Individual experiences may vary.</small>
                  </div>
                </div>
              </div>
            </div>
          `;
          
          document.body.appendChild(modal);

          // Add modern styling
          const style = document.createElement('style');
          style.textContent = `
            .company-reviews-modal {
              position: fixed;
              top: 0;
              left: 0;
              width: 100vw;
              height: 100vh;
              z-index: 10000;
              display: flex;
              align-items: center;
              justify-content: center;
              padding: 0;
              margin: 0;
              animation: modalFadeIn 0.4s cubic-bezier(0.16, 1, 0.3, 1);
            }
            
            .modal-backdrop {
              position: absolute;
              top: 0;
              left: 0;
              width: 100%;
              height: 100%;
              background: rgba(0, 0, 0, 0.65);
              backdrop-filter: blur(12px);
            }
            
            .modal-container {
              position: relative;
              background: white;
              border-radius: 24px;
              width: 90vw;
              max-width: 1100px;
              max-height: 90vh;
              overflow: hidden;
              box-shadow: 
                0 32px 64px rgba(0, 0, 0, 0.25),
                0 0 0 1px rgba(255, 255, 255, 0.1);
              animation: modalSlideIn 0.4s cubic-bezier(0.16, 1, 0.3, 1);
              display: flex;
              flex-direction: column;
              margin: auto;
            }
            
            .modal-header {
              display: flex;
              align-items: center;
              justify-content: space-between;
              padding: 32px 40px;
              border-bottom: 1px solid #e2e8f0;
              background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 50%, #a855f7 100%);
              color: white;
              position: relative;
              overflow: hidden;
            }
            
            .modal-header::before {
              content: '';
              position: absolute;
              top: 0;
              left: 0;
              right: 0;
              bottom: 0;
              background: linear-gradient(135deg, rgba(255,255,255,0.1) 0%, transparent 50%);
              pointer-events: none;
            }
            
            .company-info {
              display: flex;
              align-items: center;
              gap: 20px;
              z-index: 1;
              position: relative;
            }
            
            .company-icon {
              width: 64px;
              height: 64px;
              background: rgba(255, 255, 255, 0.15);
              border-radius: 16px;
              display: flex;
              align-items: center;
              justify-content: center;
              backdrop-filter: blur(10px);
              border: 1px solid rgba(255, 255, 255, 0.2);
              flex-shrink: 0;
            }
            
            .company-logo {
              font-size: 26px;
              font-weight: 700;
              color: white;
            }
            
            .company-details {
              display: flex;
              flex-direction: column;
              gap: 4px;
            }
            
            .company-title {
              font-size: 30px;
              font-weight: 700;
              margin: 0;
              color: white;
              text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
              line-height: 1.2;
            }
            
            .company-subtitle {
              font-size: 16px;
              margin: 0;
              color: rgba(255, 255, 255, 0.85);
              font-weight: 400;
            }
            
            .close-btn {
              background: rgba(255, 255, 255, 0.15);
              border: 1px solid rgba(255, 255, 255, 0.2);
              border-radius: 12px;
              width: 48px;
              height: 48px;
              display: flex;
              align-items: center;
              justify-content: center;
              cursor: pointer;
              color: white;
              transition: all 0.2s ease;
              backdrop-filter: blur(10px);
              z-index: 1;
              position: relative;
              flex-shrink: 0;
            }
            
            .close-btn:hover {
              background: rgba(255, 255, 255, 0.25);
              transform: scale(1.05);
            }
            
            .modal-body {
              flex: 1;
              overflow-y: auto;
              scrollbar-width: thin;
              scrollbar-color: #cbd5e0 #f7fafc;
              background: #fafbfc;
            }
            
            .modal-body::-webkit-scrollbar {
              width: 8px;
            }
            
            .modal-body::-webkit-scrollbar-track {
              background: #f7fafc;
            }
            
            .modal-body::-webkit-scrollbar-thumb {
              background: #cbd5e0;
              border-radius: 4px;
            }
            
            .loading-section {
              display: flex;
              align-items: center;
              justify-content: center;
              padding: 80px 40px;
              min-height: 250px;
              flex-direction: column;
            }
            
            .loading-animation {
              text-align: center;
            }
            
            .loading-dots {
              display: flex;
              gap: 10px;
              margin-bottom: 24px;
              justify-content: center;
              align-items: center;
            }
            
            .loading-dots span {
              width: 14px;
              height: 14px;
              background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 50%, #a855f7 100%);
              border-radius: 50%;
              animation: loadingBounce 1.4s ease-in-out infinite;
              box-shadow: 0 2px 4px rgba(99, 102, 241, 0.3);
            }
            
            .loading-dots span:nth-child(1) { animation-delay: -0.32s; }
            .loading-dots span:nth-child(2) { animation-delay: -0.16s; }
            .loading-dots span:nth-child(3) { animation-delay: 0s; }
            
            .loading-text {
              font-size: 18px;
              color: #64748b;
              margin: 0;
              font-weight: 500;
              letter-spacing: 0.5px;
            }
            
            .modal-footer {
              padding: 24px 40px;
              border-top: 1px solid #e2e8f0;
              background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
              text-align: center;
            }
            
            .disclaimer small {
              color: #64748b;
              font-size: 13px;
              font-weight: 400;
              letter-spacing: 0.3px;
            }
            
            @keyframes modalFadeIn {
              from { 
                opacity: 0; 
              }
              to { 
                opacity: 1; 
              }
            }
            
            @keyframes modalSlideIn {
              from { 
                opacity: 0;
                transform: scale(0.85) translateY(40px); 
              }
              to { 
                opacity: 1;
                transform: scale(1) translateY(0); 
              }
            }
            
            @keyframes loadingBounce {
              0%, 80%, 100% {
                transform: scale(0.6);
                opacity: 0.5;
              } 
              40% {
                transform: scale(1);
                opacity: 1;
                transform: scale(1);
              }
            }
            
            @media (max-width: 768px) {
              .modal-container {
                width: 95%;
                margin: 20px;
                max-height: 90vh;
              }
              
              .modal-header {
                padding: 20px 25px 15px;
              }
              
              .company-title {
                font-size: 22px;
              }
              
              .company-icon {
                width: 50px;
                height: 50px;
              }
              
              .company-logo {
                font-size: 20px;
              }
            }
          `;
          
          document.head.appendChild(style);

          // Close modal functionality
          const closeBtn = modal.querySelector('.close-btn');
          const backdrop = modal.querySelector('.modal-backdrop');
          
          const closeModal = () => {
            modal.style.animation = 'modalFadeIn 0.2s ease-out reverse';
            setTimeout(() => {
              if (document.body.contains(modal)) {
                document.body.removeChild(modal);
              }
            }, 200);
          };
          
          closeBtn.onclick = closeModal;
          backdrop.onclick = (e) => {
            if (e.target === backdrop) {
              closeModal();
            }
          };
          
          // ESC key to close
          const handleEsc = (e) => {
            if (e.key === 'Escape') {
              closeModal();
              document.removeEventListener('keydown', handleEsc);
            }
          };
          document.addEventListener('keydown', handleEsc);

          // Fetch and display reviews
          fetchCompanyReviews(companyName)
            .then(reviews => {
              const modalBody = modal.querySelector('.modal-body');
              modalBody.innerHTML = '';
              modalBody.appendChild(formatCompanyReviews(reviews));
            })
            .catch(error => {
              const modalBody = modal.querySelector('.modal-body');
              modalBody.innerHTML = `
                <div class="error-section">
                  <div class="error-icon">⚠️</div>
                  <h3>Unable to load reviews</h3>
                  <p>We're experiencing some technical difficulties. Please try again later.</p>
                </div>
              `;
            });
        }

        // Display job results
        async function displayJobResults() {
            try {
                const response = await fetch('jobs.json');
                const jobData = await response.json();

                const query = getQueryParam('query');
                const location = getQueryParam('location');

                const matchedJobs = jobData
                    .map(job => ({
                        ...job,
                        match_percentage: calculateMatchPercentage(query, job.key_skills).toFixed(2)
                    }))
                    .filter(job =>
                        (query === '' || job.match_percentage > 0) &&
                        (location === '' || job.location.toLowerCase().includes(location.toLowerCase()))
                    )
                    .sort((a, b) => b.match_percentage - a.match_percentage);

                const resultsContainer = document.getElementById('job-results');

                if (matchedJobs.length === 0) {
                    document.querySelector('.search-header h1').textContent = 'No Job Results';
                    return;
                }

                resultsContainer.innerHTML = matchedJobs.map(job => `
            <div class="job-card">
                <h2 class="job-title">${job.job_title.trim()}</h2>
                <div class="job-details">
                    <p><strong>Company:</strong> ${job.company_name}</p>
                    <p><strong>Location:</strong> ${job.location}</p>
                    <p><strong>Salary:</strong> ${job.job_salary}</p>
                    <p><strong>Experience:</strong> ${job.job_experience_required}</p>
                    <p><strong>Key Skills:</strong> ${job.key_skills}</p>
                    <p><strong>Match Percentage:</strong> ${job.match_percentage}%</p>
                </div>
                <div class="job-actions">
                    <a href="#" class="missing-skills">Missing Skills</a>
                    <a href="#" class="upskill">Upskill</a>
                    <a href="#" class="company-reviews" data-company="${job.company_name}">Company Reviews</a>
                    <a href="#" class="job-apply">Apply Now</a>
                </div>
            </div>
        `).join('');

                // Add event listeners for company reviews
                document.querySelectorAll('.company-reviews').forEach(button => {
                    button.addEventListener('click', (e) => {
                        e.preventDefault();
                        const companyName = e.target.getAttribute('data-company');
                        openCompanyReviewsModal(companyName);
                    });
                });

                document.querySelector('.search-header h1').textContent =
                    `${matchedJobs.length} Job Results for "${query}" in ${location}`;

            } catch (error) {
                console.error('Error loading job data:', error);
                document.getElementById('job-results').innerHTML =
                    '<p>Error loading job listings. Please try again later.</p>';
            }
        }

        // Event listener for page load
        document.addEventListener('DOMContentLoaded', displayJobResults);
    </script>
</body>

</html>